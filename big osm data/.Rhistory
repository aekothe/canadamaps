p +
geom_point(data = ufo, aes(x = long, y = lat),
size = 1, color = "red",
alpha = 0.5, inherit.aes = FALSE) +
geom_point(data = ufo,
aes(x = long, y = lat), color = "purple")
p +
geom_point(data = ufo, aes(x = long, y = lat),
size = 1, color = "red",
alpha = 0.5, inherit.aes = FALSE) +
geom_point(data = ufo,
aes(x = long, y = lat), color = "purple", inherit.aes = FALSE)
p +
geom_point(data = ufo, aes(x = long, y = lat),
size = 1, color = year,
alpha = 0.5, inherit.aes = FALSE) +
theme(legend.position = "none"
p +
geom_point(data = ufo, aes(x = long, y = lat),
size = 1, color = year,
alpha = 0.5, inherit.aes = FALSE) +
theme(legend.position = "none")
map +
geom_point(data = ufo, aes(x = long, y = lat),
size = 1, color = "red",
alpha = 0.5, inherit.aes = FALSE) +
theme(legend.position = "none")
geom_point(data = ufo, aes(x = long, y = lat),
size = 1, color = "red",
alpha = 0.5, inherit.aes = FALSE)
ggplot(ufo, aes(x = long, y = lat)) +
geom_point(color = "firebrick") +
labs(x = "Year", y = "Temperature (°F)")
anim <- p3 +
transition_states(year,
transition_length = 2,
state_length = 1); anim
p3 <- ggplot(ufo, aes(x = long, y = lat)) +
geom_point(color = "firebrick") +
labs(x = "Year", y = "Temperature (°F)")
#works but not all points appearing, make sure to add years
anim <- p3 +
transition_states(year,
transition_length = 2,
state_length = 1); anim
ggplot(ufo, aes(x = long, y = lat)) +
geom_point(color = "firebrick") +
theme_void()
p + ggplot(ufo, aes(x = long, y = lat)) +
geom_point(color = "firebrick") +
theme_void()
p + ggplot(ufo, aes(x = long, y = lat), inherit.aes = FALSE) +
geom_point(color = "firebrick") +
theme_void()
ggplot(ufo, aes(x = long, y = lat)) +
geom_point(color = "firebrick") +
theme_void()
p3 +
transition_states(year,
transition_length = 2,
state_length = 1); anim
ggplot(ufo, aes(x = long, y = lat)) +
geom_point(color = "firebrick") +
theme_void()
anim <- p3 +
transition_states(year,
transition_length = 2,
state_length = 1); anim
anim + ggtitle('Now showing {year}')
ggplot(ufo, aes(x = long, y = lat)) +
geom_point(color = "tomato") +
theme_void()
p3 <- ggplot(ufo, aes(x = long, y = lat)) +
geom_point(color = "tomato") +
theme_void()
anim <- p3 +
transition_states(year,
transition_length = 2,
state_length = 1); anim
anim + p
p + anim
p3 <- ggplot(ufo, aes(x = long, y = lat)) +
geom_point(color = "tomato") +
theme_void(); p3
p3 <- ggplot(ufo, aes(x = long, y = lat)) +
geom_point(color = "tomato") +
theme_void(); p3
ggplot() +
geom_polygon(data = ufo, aes(x=long, y = lat, fill=year, group = group), color="white") +
geom_polygon(data = map, aes(x=long, y=lat, group=group), color="black", fill=NA)
ggplot() +
geom_polygon(data = ufo, aes(x=long, y = lat, fill=year, group = group), color="white") +
geom_polygon(data = map, aes(x=long, y=lat, group=group, inherit.aes = FALSE),
color="black", fill=NA)
ggplot() +
geom_polygon(data = ufo, aes(x=long, y = lat, fill=year, group = group,
inherit.aes = FALSE), color="white") +
geom_polygon(data = map, aes(x=long, y=lat, group=group, inherit.aes = FALSE),
color="black", fill=NA)
geom_polygon(data = ufo, aes(x=long, y = lat, fill=year, group = group,
inherit.aes = FALSE), color="white")
ggplot() +
geom_polygon(data = ufo, aes(x=long, y = lat, group = group,
inherit.aes = FALSE), color="white")
library(devtools)
library(mapcan)
library(tidyverse)
library(socviz)
library(scales)
library(cowplot)
library(grid)
library(gridExtra)
library(gganimate)
library(ggmap)
library(dplyr)
library(animation)
map <- mapcan(boundaries = province,
type = standard)
rawdata <- read_csv(file="/Users/annkothe/desktop/nuforc_reports.csv")
rawdata$lat_sight <- rawdata$city_latitude
rawdata$long_sight <- rawdata$city_longitude
rawdata$year <- rawdata$date_time
rawdata$pr_alpha <- rawdata$state
ufo <- subset(rawdata, select=c(long_sight, lat_sight, year, city, pr_alpha))
#keep on first four characters of row
ufo$year <- substr(ufo$year, 0, 4)
#filter by country and data availability
ufo <- filter(ufo, pr_alpha == "ON" | pr_alpha == "AB" | pr_alpha == "NB" | pr_alpha == "QC"
| pr_alpha == "NL" | pr_alpha == "NS" | pr_alpha == "PE" | pr_alpha == "BC"
| pr_alpha == "SK" | pr_alpha == "MB" | pr_alpha == "YT" | pr_alpha == "NT"
| pr_alpha == "NU")
ufo <- na.omit(ufo)
data <- left_join(map, ufo, by = "pr_alpha")
ggplot(data, aes(x = long, y = lat))
ggplot(data, aes(x = long, y = lat)) +
geom_path(aes(group=group), size=1)
ggplot(data, aes(x = long, y = lat)) +
geom_path(aes(group=group), size=1) +
geom_point(data = data, aes(x = long_sight, y = lat_sight),col="red", size=5)+
theme_bw()
ggplot(data, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "tomato") +
theme_void()
p3 <- ggplot(data, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "tomato") +
theme_void(); p3
ggplot(data, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "tomato") +
theme_void()
ggplot(ufo, aes(x = long, y = lat)) +
geom_point(color = "tomato") +
theme_void()
View(ufo)
ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "tomato") +
theme_void()
ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
ggplot(map, aes(x = long, y = lat, group = group), color = black, fill = NA) +
geom_polygon() +
coord_fixed() +
theme_mapcan() +
ggtitle("UFO Sightings")
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("black", 1), size = 0.3) +
coord_fixed() +
theme_mapcan() +
ggtitle("UFO Sightings")
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("black", 1), size = 0.1, fill = NA) +
coord_fixed() +
theme_mapcan() +
ggtitle("UFO Sightings")
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("black", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggtitle("UFO Sightings")
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggtitle("UFO Sightings"
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggtitle("UFO Sightings")
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggtitle("UFO Sightings")
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggtitle("x")
ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
ggplot() +
geom_sf(aes(x = long, y = lat, group = group), color = "gray60", size = 0.1, data = map
ggplot() +
geom_sf(aes(x = long, y = lat, group = group), color = "gray60", size = 0.1, data = map)
View(map)
ggplot() +
geom_sf(map, aes(x = long, y = lat, group = group), color = "gray60", size = 0.1)
ggplot() +
geom_sf(map, aes(x = long, y = lat, group = group), color = "gray60", size = 0.1) +
geom_sf(data = ufo, color = '#001e73', alpha = 0.5, size = 3)
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple")
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed()
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan()
geom_point(data = ufo, aes(x = long, y = lat),
size = 1, color = "yellow",
alpha = 0.5, inherit.aes = FALSE) +
theme(legend.position = "none")
geom_point(data = ufo, aes(x = long, y = lat),
size = 1, color = "yellow",
alpha = 0.5, inherit.aes = FALSE) +
theme(legend.position = "none")
ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggplot(ufo, aes(x = long_sight, y = lat_sight), inherit.aes = FALSE) +
geom_point(color = "yellow") +
theme_void()
install.packages("patchwork")
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggplot(ufo, aes(x = long_sight, y = lat_sight), inherit.aes = FALSE) +
geom_point(color = "yellow") +
theme_void()
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggtitle("x")
p + ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
p <- ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggtitle("x"); p
p + ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
library(patchwork)
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggplot(ufo, aes(x = long_sight, y = lat_sight), inherit.aes = FALSE) +
geom_point(color = "yellow") +
theme_void()
p + ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggplot(ufo, aes(x = long_sight, y = lat_sight), inherit.aes = FALSE) +
geom_point(color = "yellow") +
theme_void()
p + ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
p +
points(ufo$long_sight, ufo$lat_sight, pch=19, col="red", cex=0.5)
p + {
p3 +
plot_layout(ncol = 1)
} +
plot_layout(ncol = 1)
p +
geom_point(data = ufo, aes(x = long, y = lat),
size = 1, color = "yellow",
alpha = 0.5, inherit.aes = FALSE) +
theme(legend.position = "none")
p2 <- p +
geom_point(data = ufo, aes(x = long_sight, y = lat_sight),
size = 1, color = "yellow",
alpha = 0.5, inherit.aes = FALSE) +
theme(legend.position = "none"); p2
p + ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
p +
geom_point(data = ufo, aes(x = long_sight, y = lat_sight),
size = 1, color = "yellow",
alpha = 0.5, inherit.aes = FALSE)
p +
geom_point(data = ufo, aes(x = long_sight, y = lat_sight),
size = 1, color = "yellow")
anim <- p3 +
transition_states(year,
transition_length = 2,
state_length = 1); anim
p + anim
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
ggplot(ufo, aes(x = long_sight, y = lat_sight), inherit.aes = FALSE) +
geom_point(color = "yellow") +
theme_void()
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
geom_point(ufo, aes(x = long_sight, y = lat_sight), inherit.aes = FALSE, color = "yellow") +
theme_void()
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan() +
geom_point(ufo, aes(x = long_sight, y = lat_sight), inherit.aes = FALSE, color = "yellow") +
theme_void()
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
theme_mapcan()
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed()
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
geom_point(color = "yellow")
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
geom_point(ufo, aes(x = long_sight, y = lat_sight), inherit.aes = FALSE,color = "yellow")
ggplot(map, mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
geom_point(ufo, aes(x = long_sight, y = lat_sight), inherit.aes = FALSE,color = "yellow")
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple")
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed()
geom_point(ufo, aes(x = long_sight, y = lat_sight), inherit.aes = FALSE,color = "yellow")
geom_point(ufo, mappping = aes(x = long_sight, y = lat_sight),
inherit.aes = FALSE,color = "yellow")
ggplot(map, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
geom_point(ufo, mapping = aes(x = long_sight, y = lat_sight),
inherit.aes = FALSE, color = "yellow")
ggplot(data, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
geom_point(aes(x = long_sight, y = lat_sight), color = "yellow")
ggplot(data, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
geom_point(aes(x = long_sight, y = lat_sight), color = "yellow") +
coord_cartesian(ylim=c(0,300)) +
geom_smooth(method="lm")
ggplot(data, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
geom_point(aes(x = long_sight, y = lat_sight), color = "yellow") +
coord_cartesian(ylim=c(0,300), limits = c(0, 31)) +
geom_smooth(method="lm")
ggplot(data, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple")
ggplot(data, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
geom_point(aes(x = long_sight, y = lat_sight), color = "yellow") +
coord_cartesian(ylim=c(-2e+06, 3e+06), limits = c(-2e+06, 4E+06)) +
geom_smooth(method="lm")
ggplot(data, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
geom_point(aes(x = long_sight, y = lat_sight), color = "yellow") +
coord_cartesian(limits = c(-2e+06, 4e+06)) +
geom_smooth(method="lm")
ggplot(data, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
geom_point(aes(x = long_sight, y = lat_sight), color = "yellow") +
coord_cartesian(ylim = c(-2e+06, 3e+06), xlim = c(-2e+06, 4e+06)) +
geom_smooth(method="lm")
p + ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
p + ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
ggplot(ufo, aes(x = long_sight, y = lat_sight)) +
geom_point(color = "yellow") +
theme_void()
View(ufo)
install.packages("rgdal")
library(rgdal)
cord.dec = SpatialPoints(cbind(ufo$long_sight, ufo$lat_sight),
proj4string=CRS("+proj=longlat"))
ggplot(data, aes(x = long, y = lat, group = group)) +
geom_polygon(colour = alpha("white", 1), size = 0.1, fill = "purple") +
coord_fixed() +
geom_point(aes(x = long_sight, y = lat_sight), color = "yellow") +
coord_cartesian(ylim = c(-2e+06, 3e+06), xlim = c(-2e+06, 4e+06)) +
geom_smooth(method="lm")
library(devtools)
library(mapcan)
library(tidyverse)
library(socviz)
library(scales)
library(cowplot)
library(extrafont)
library(grid)
library(gridExtra)
library(RColorBrewer)
provinces <- mapcan(boundaries = provinces,
type = standard)
senate <- read_csv(file="/Users/annkothe/desktop/r/data/senate.csv")
data <- left_join(provinces, senate, by = "pr_alpha")
data$sPersons <- factor(data$sPersons, levels = c("800 Thousand", "700 Thousand",
"600 Thousand", "300 Thousand",
"200 Thousand", "100 Thousand",
"80 Thousand", "40 Thousand"))
map <- ggplot(data, aes(long, lat, group = group)) +
geom_polygon(aes(fill = sPersons), colour = alpha("white", 1), size = .3) +
coord_fixed() +
theme_minimal() +
ggtitle("APPROXIMATE NUMBER OF PERSONS PER SENATOR") +
theme(axis.line = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(), axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(size=12, family = "serif"),
plot.title = element_text(hjust = 0.5, face = "bold", size = 40),
legend.text = element_text(color = "black", size = 40)) +
scale_fill_manual(name = "",
values = c("violetred4", "violetred",
"hotpink3", "pink", "purple", "violet","plum3",
"thistle2")); map
pei <- data%>%
filter(pr_sgc_code == 11)
pmap <- pei%>%
ggplot(aes(x = long, y = lat, group = group, fill = r2019)) +
geom_polygon(aes(fill = sPersons), colour = alpha("white", 1), size = 0.3)+
coord_fixed() +
theme_minimal() +
theme(axis.line = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(), axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(size=8, family = "serif"),
legend.position = "none",
panel.border = element_rect(fill = NA)) +
ggtitle("") +
scale_fill_manual(name = "Persons per Senator",
values = c("thistle2")); pmap
#final
map
print(pmap, vp = viewport(.85, .08, width = 0.25, height = 0.25))
library(devtools)
library(mapcan)
library(tidyverse)
library(socviz)
library(scales)
library(cowplot)
lang <- read_csv(file="/Users/annkothe/desktop/r/mapcan/language/languagedata.csv")
library(remotes)
library(sf)
library(tidyverse)
library(osmdata)
library(showtext)
library(ggmap)
library(osmextract)
setwd("~/Desktop/r/osmex")
options(timeout = 300)
rivers <- oe_get("Canada", quiet = FALSE,
query = "SELECT * FROM 'lines' WHERE waterway = 'river'")
par(mar = rep(0.1, 4))
plot(sf::st_geometry(rivers), main="The Sine Function", col="blue")
plot(sf::st_geometry(rivers), main="", col="blue")
plot(sf::st_geometry(rivers))
plot(sf::st_geometry(rivers), col = "blue")
plot(sf::st_geometry(rivers), col = "steelblue")
plot(sf::st_geometry(rivers), col = "steelblue", main = "Rivers of Canada")
