theme_mapcan() +
theme(text = element_text(size=12, family = "Georgia")) +
theme(legend.title=element_blank()) +
coord_fixed() +
theme(legend.position = "none") +
labs(title = "43rd Canadian General Election",
subtitle = "source: Elections Canada"); lib
lib <- ggplot(candata, aes(long, lat, group = group, fill = liberal)) +
geom_polygon(color = "white", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1)) +
ggplot(candata, aes(long, lat, group = group, fill = con)) +
geom_polygon(color = "white", size = .1, alpha = 1) +
theme_mapcan() +
theme(text = element_text(size=12, family = "Georgia")) +
theme(legend.title=element_blank()) +
coord_fixed() +
theme(legend.position = "none") +
labs(title = "43rd Canadian General Election",
subtitle = "source: Elections Canada"); lib
map <- readOGR("lfed000b21a_e.shp")
map.df <- fortify(map)
View(map.df)
candata <- left_join(map, data, by = "code")
x <- tm_shape(map) +
tm_fill(col = "liberal",
palette = c("white, red"),,
colorNA = "grey50",
alpha = 0.7,
legend.reverse = FALSE) ; x
candata <- left_join(map.df, data, by = "code")
x <- tm_shape(candata) +
tm_fill(col = "liberal",
palette = "Blues",
breaks = c(0, 5, 10, 20, 30, 40, 50),
labels=c("< 5%", "5% - 10%", "10% - %20", "20% - 30%",
"30% - 40%", "40% - 50%"),
colorNA = "grey50",
alpha = 0.7,
legend.reverse = FALSE); x
View(candata)
x <- tm_shape(candata) +
tm_fill(col = "liberal",
palette = "Blues",
colorNA = "grey50",
alpha = 0.7,
legend.reverse = FALSE); x
tm_shape(map.df)
plot(lib)
plot(con)
plot(lib)
plot(con, alpha = .1)
plot(lib, con, ndp)
plot(lib, con, ndp, alpha = .1)
lib <- ggplot(candata, aes(long, lat, group = group, fill = liberal)) +
geom_polygon(color = "white", size = .1, alpha = 1) +
scale_fill_brewer(palette = "reds", na.value = (alpha =.1)) +
theme_mapcan() +
theme(text = element_text(size=12, family = "Georgia")) +
theme(legend.title=element_blank()) +
coord_fixed() +
theme(legend.position = "none") +
labs(title = "43rd Canadian General Election",
subtitle = "source: Elections Canada"); lib
lib <- ggplot(candata, aes(long, lat, group = group, fill = liberal)) +
geom_polygon(color = "white", size = .1, alpha = 1) +
scale_fill_brewer(palette = "Reds", na.value = (alpha =.1)) +
theme_mapcan() +
theme(text = element_text(size=12, family = "Georgia")) +
theme(legend.title=element_blank()) +
coord_fixed() +
theme(legend.position = "none") +
labs(title = "43rd Canadian General Election",
subtitle = "source: Elections Canada"); lib
lib <- ggplot(candata, aes(long, lat, group = group, fill = liberal)) +
geom_polygon(color = "white", size = .1, alpha = 1) +
scale_fill_brewer(low = "white", high = "red", na.value = (alpha =.1)) +
theme_mapcan() +
theme(text = element_text(size=12, family = "Georgia")) +
theme(legend.title=element_blank()) +
coord_fixed() +
theme(legend.position = "none") +
labs(title = "43rd Canadian General Election",
subtitle = "source: Elections Canada"); lib
lib <- ggplot(candata, aes(long, lat, group = group, fill = liberal)) +
geom_polygon(color = "white", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1)) +
theme_mapcan() +
theme(text = element_text(size=12, family = "Georgia")) +
theme(legend.title=element_blank()) +
coord_fixed() +
theme(legend.position = "none") +
labs(title = "43rd Canadian General Election",
subtitle = "source: Elections Canada"); lib
x <- tm_shape(candata) +
tm_fill(col = "liberal",
palette = "Blues",
colorNA = "grey50",
alpha = 0.7,
legend.reverse = FALSE); x
bloc <- ggplot(candata, aes(long, lat, group = group, fill = bloc)) +
geom_polygon(color = "white", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "skyblue", na.value = (alpha =.1)) +
theme_mapcan() +
theme(text = element_text(size=12, family = "Georgia")) +
theme(legend.title=element_blank()) +
coord_fixed() +
theme(legend.position = "none") +
labs(title = "43rd Canadian General Election",
subtitle = "source: Elections Canada"); bloc
tm_shape(candata) +
tm_bubbles(col = "pink",
size = "liberal",
jitter = .2,
scale = .5,
alpha = .9)
tm_shape(map.df)
ggplot(candata, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .1, alpha = 1)
ggplot(candata, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .1, alpha = 1) +
theme_mapcan()
ggplot(candata, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .3, alpha = 1) +
theme_mapcan()
ggplot(candata, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .3, alpha = 1) +
theme_mapcan() +
geom_polygon(fill = liberal, color = "white", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1))
ggplot(candata, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .3, alpha = 1) +
theme_mapcan() +
geom_polygon(fill = candata$liberal, color = "white", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1))
ggplot(map.df, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .3, alpha = 1) +
theme_mapcan() +
geom_polygon(fill = data$liberal) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1))
ggplot(map.df, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .3, alpha = 1) +
theme_mapcan() +
geom_polygon(fill = data$liberal, color = "white", size = .1, alpha = .1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1))
ggplot(map.df, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .3, alpha = 1) +
theme_mapcan() +
geom_polygon(fill = data$liberal, color = "white", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1))
ggplot(map.df, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .3, alpha = 1) +
theme_mapcan() +
geom_polygon(fill = data$liberal, color = "white", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1))
ggplot(map.df, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .3, alpha = 1) +
theme_mapcan() +
geom_polygon(fill = data$liberal, color = "white", size = .3, alpha = 1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1))
ggplot(candata, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .3, alpha = 1) +
theme_mapcan() +
geom_polygon(fill = candata$liberal, color = "white", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1))
ggplot(candata, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .3, alpha = 1) +
theme_mapcan() +
geom_polygon(fill = candata$liberal, color = "white", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1)) +
geom_polygon(fill = candata$con, color = "white", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "blue", na.value = (alpha =.1))
ggplot(candata, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .3, alpha = 1) +
theme_mapcan() +
geom_polygon(fill = candata$liberal, color = "red", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1)) +
geom_polygon(fill = candata$con, color = "blue", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "blue", na.value = (alpha =.1))
x <- ggplot(candata, aes(long, lat, group = group)) +
geom_polygon(color = "white", size = .3, alpha = 1) +
theme_mapcan(); x
y <- x +
geom_polygon(fill = candata$liberal, color = "white", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1)); y
y <- x +
geom_polygon(fill = liberal, color = "white", size = .1, alpha = 1) +
scale_fill_gradient2(low = "white", high = "red", na.value = (alpha =.1)); y
ggplot(data = map.df) +
geom_sf(fill = "antiquewhite1") +
geom_sf(data = candata$con, aes(fill = con))
ggplot(data = map) +
geom_sf(fill = "antiquewhite1") +
geom_sf(data = candata$con, aes(fill = con))
tm_shape(map)
#Title: Sarasota County Schools Project 10.6.1
#Subtitle: The Based Version: Eureka, Missouri
#Author:Angela Kothe
#Date: 11/12/21
#Purpose: Working on Detail 2.0
#Output: Internal
library(tidyverse)
library(osmdata)
library(sf)
library(remotes)
library(tigris)
library(sp)
library(tmap)
library(tmaptools)
library(rosm)
library(OpenStreetMap)
setwd("/Users/annkothe/Documents/GitHub/SarasotaSchoolsProject")
#data, note: white data is non-hispanic
data <- read_csv(file="census.csv")
#clean the data
data$population <- data$DP05_0001E
data$asian <- data$DP05_0067E
data$black <- data$DP05_0065E
data$white <- data$DP05_0077E
data$pctasian <- data$DP05_0067PE
data$pctblack <- data$DP05_0065PE
data$pctwhite <- data$DP05_0064PE
data$pcthispanic <- data$DP05_0071PE
dataclean <- subset(data, select=c(GEO_ID, NAME, population, asian,
black, white, pcthispanic))
#make a pct minority variable and a majority minority group variable
dataclean$pctMinority <- (dataclean$asian + dataclean$black)/dataclean$population
dataclean$mm <- as.integer(dataclean$asian > dataclean$black)
dataclean$mm[which(dataclean$mm > 0)] = "Asian"
dataclean$mm[which(dataclean$mm < 1)] = "Black"
dataclean$pctwhite <- (dataclean$white/dataclean$population)*100
dataclean$`Percent Black` <- (dataclean$black/dataclean$population)*100
dataclean$`Percent Asian` <- (dataclean$asian/dataclean$population)*100
dataclean$newpct <- (dataclean$pctMinority*100)
suppressWarnings(dataclean$`Percent Hispanic` <- as.numeric(dataclean$pcthispanic))
#download shapefiles from tigris
sarasota <- tracts("FL", "Sarasota", cb = TRUE)
sarasota$GEO_ID <- sarasota$AFFGEOID
#merge dataset with shape file
datamap <- left_join(sarasota, dataclean, by = "GEO_ID")
#make a dataset of high schools in Sarasota
schools <- data.frame(ID = c(1, 2, 3, 4, 5, 6, 7),
School = c("Suncoast Polytech",
"Riverview",
"Sarasota Military",
"Booker",
"Sarasota High",
"North Port High",
"Pine View School"),
NAME.y = c("Census Tract 17.04,
Sarasota County, Florida",
"Census Tract 18.03,
Sarasota County, Florida",
"Census Tract 1.03,
Sarasota County, Florida",
"Census Tract 3,
Sarasota County, Florida",
"Census Tract 5.02,
Sarasota County, Florida",
"Census Tract 27.38,
Sarasota County Florida",
"Census Tract 21,
Sarasota County, Florida"),
STATEFP = c("School", "School", "School", "School",
"School", "School", "School"),
COUNTYFP = c("115", "115", "115", "115",
"115", "115", "115"),
TRACTCE = c("001704", "001803", "000102",
"000300","000502", "002724",
"002100"),
coordinates = c("c(-82.497670, 27.287130)",
"c(-82.520599, 27.282770)",
"c(-82.53861, 27.343857)",
"c(-82.53811, 27.365803)",
"c(-82.526390, 27.322920)",
"c(-82.22471, 27.071737)",
"c(-82.48063, 27.187479)"),
x = c(-82.497670, -82.520600, -82.53861, -82.53811,
-82.526390, -82.22471, -82.48063),
y = c(27.287130, 27.282770, 27.343857, 27.365803,
27.322920, 27.071737, 27.187479))
#merge it with spatial data and omit census tracts without schools
schools <- left_join(datamap, schools, by = "TRACTCE")
schools <- na.omit(schools)
tm_fill(col = "Percent Asian",
palette = "Reds",
breaks = c(0, 1, 5, 10, 12),
labels=c("< 1%", "1% - 5%","5% - 10%", ">10%"),
colorNA = "grey50",
alpha = 0.7,
legend.reverse = FALSE) + o; a1
roads <- osm_poly2line(roads)
roads <- roads$osm_lines
o <- tm_shape(roads) +
tm_lines(); o
tmap_mode("plot")
roads <- opq("siesta key") %>%
add_osm_feature(key = "highway",
value = c("motorway", "primary", "motorway_link",
"primary_link", "trunk", "trunk_link",
"secondary", "tertiary", "secondary_link",
"tertiary_link")) %>%
osmdata_sf()
roads <- osm_poly2line(roads)
roads <- roads$osm_lines
o <- tm_shape(roads) +
tm_lines(); o
aa1 <- tm_shape(datamap) +
tm_fill(col = "Percent Black",
palette = "-magma",
breaks = c(0, 5, 10, 15, 20, 30, 80, 90),
labels=c("< 5%", "5% - 10%", "10% - %15", "20% - 30%",
"30% - 40%", "50% - 60%",
"> 80%"),
colorNA = "grey50",
alpha = 0.7,
legend.reverse = FALSE) + o; aa1
a1 <- tm_shape(datamap) +
tm_fill(col = "Percent Asian",
palette = "Reds",
breaks = c(0, 1, 5, 10, 12),
labels=c("< 1%", "1% - 5%","5% - 10%", ">10%"),
colorNA = "grey50",
alpha = 0.7,
legend.reverse = FALSE) + o; a1
library(tidyverse)
library(osmdata)
library(sf)
library(remotes)
library(tigris)
library(sp)
library(tmap)
library(tmaptools)
library(rosm)
library(OpenStreetMap)
tmap_mode("plot")
roads <- opq("Alberta, Canada") %>%
add_osm_feature(key = "natural",
value = "mountain_range") %>%
osmdata_sf()
roads <- osm_poly2line(roads)
roads <- roads$osm_lines
o <- tm_shape(roads) +
tm_lines(); o
View(roads)
roads <- opq("Alberta, Canada") %>%
add_osm_feature(key = "natural",
value = c("mountain_range", "ridge")) %>%
osmdata_sf()
roads <- osm_poly2line(roads)
roads <- roads$osm_lines
o <- tm_shape(roads) +
tm_lines(); o
roads <- opq("Alberta, Canada") %>%
add_osm_feature(key = "natural",
value = c("mountain_range", "ridge")) %>%
osmdata_sf()
o <- tm_shape(roads) +
tm_lines(); o
roads <- roads$osm_polygons
o <- tm_shape(roads) +
tm_lines(); o
o <- tm_shape(roads) +
tm_polygons(); o
remotes::install_github("schochastics/roughsf")
library(sf)
ger <- rnaturalearth::ne_countries(scale = "medium", country = "Germany", returnclass = "sf")
ger <- st_cast(ger, "POLYGON")
ger$fill <- "#CD2626"
ger$stroke <- 2
ger$fillweight <- 0.5
# MULTIPOLYGON (and also MULTILINESTRING) are not supported
ger <- st_cast(ger, "POLYGON")
cities <- data.frame(name = c("Berlin", "Munich", "Hamburg", "Cologne"))
cities$geometry <- st_sfc(
st_point(c(13.4, 52.5200)), st_point(c(11.582, 48.1351)),
st_point(c(9.9937, 53.5511)), st_point(c(6.9603, 50.9375))
)
cities <- st_sf(cities)
st_crs(cities) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
cities$size <- 15
cities$color <- "#000000"
cities$label <- cities$name
cities$label_pos <- "e"
roughsf::roughsf(list(ger, cities),
title = "Sketchy Map of Germany",
caption = "drawn by @schochastics",
title_font = "48px Pristina",
font = "30px Pristina",
caption_font = "30px Pristina",
roughness = 1, bowing = 1, simplification = 1,
width = 800, height = 1000,
)
library(mapcan)
library(roughsf)
provinces <- mapcan(boundaries = provinces,
type = standard)
roughsf::roughsf(province,
title = "Sketchy Map of Germany",
caption = "drawn by @schochastics",
title_font = "48px Pristina",
font = "30px Pristina",
caption_font = "30px Pristina",
roughness = 1, bowing = 1, simplification = 1,
width = 800, height = 1000,
)
roughsf::roughsf(provinces,
title = "Sketchy Map of Germany",
caption = "drawn by @schochastics",
title_font = "48px Pristina",
font = "30px Pristina",
caption_font = "30px Pristina",
roughness = 1, bowing = 1, simplification = 1,
width = 800, height = 1000,
)
roughsf::roughsf(provinces,
title = "Sketchy Map of Germany",
caption = "drawn by @schochastics",
title_font = "48px Pristina",
font = "30px Pristina",
caption_font = "30px Pristina",
roughness = 1, bowing = 1, simplification = 1,
)
devtools::install_github("xvrdm/ggrough")
library(mapcan)
library(ggrough)
showtext::font_add_google("Rock Salt", "Rock Salt")
showtext::showtext_auto()
library(extrafont)
showtext::font_add_google("Rock Salt", "Rock Salt")
showtext::showtext_auto()
font_add_google(name = "Rock Salt", family = "Rock Salt")
showtext_auto()
library(showtext)
font_add_google(name = "Rock Salt", family = "Rock Salt")
showtext_auto()
map <- ggplot(provinces, aes(long, lat, group = group)) +
geom_polygon(aes(fill = sPersons), colour = alpha("white", 1), size = .3) +
coord_fixed() +
theme_minimal() +
ggtitle("APPROXIMATE NUMBER OF PERSONS PER SENATOR") +
theme(axis.line = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(), axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(size=12, family = "Rock Salt"),
plot.title = element_text(hjust = 0.5, face = "bold", size = 40),
legend.text = element_text(color = "black", size = 40)) +
scale_fill_manual(name = "",
values = c("violetred4", "violetred",
"hotpink3", "pink",
"purple", "violet",
"plum3", "thistle2",
"blue", "black",
"yellow", "green",
"white")); map
map <- ggplot(provinces, aes(long, lat, group = group)) +
geom_polygon(aes(fill = pr_alpha), colour = alpha("white", 1), size = .3) +
coord_fixed() +
theme_minimal() +
ggtitle("APPROXIMATE NUMBER OF PERSONS PER SENATOR") +
theme(axis.line = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(), axis.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
text = element_text(size=12, family = "Rock Salt"),
plot.title = element_text(hjust = 0.5, face = "bold", size = 40),
legend.text = element_text(color = "black", size = 40)) +
scale_fill_manual(name = "",
values = c("violetred4", "violetred",
"hotpink3", "pink",
"purple", "violet",
"plum3", "thistle2",
"blue", "black",
"yellow", "green",
"white")); map
options <- list(
GeomCol=list(fill_style="hachure",  angle_noise=0.8, gap_noise=0.2))
get_rough_chart(map, options, family="Rock Salt", font_size_booster = 1.4
library(maptools)
library(rgeos)
library(tidyverse)
library(rgdal)
library(ggthemes)
library(socviz)
library(scales)
library(cowplot)
library(ggmap)
library(dplyr)
library(showtext)
library(sf)
library(extrafont)
library(ggplot2)
library(raster)
setwd("/Users/annkothe/Documents/GitHub/canadamaps/raster")
#water
wmap <- readOGR("canvec_1M_CA_Elevation_shp/canvec_1M_CA_Elevation/bathymetry_2.shp")
wmap.df <- fortify(wmap)
ggplot(wmap.df, aes(long, lat, group = group)) +
geom_polygon(color = "blue", size = .3) +
coord_map(projection = "albers",  lat0 = 49, lat1 = 75) +
theme_map()
wmap <- spTransform(wmap, CRS("+proj=longlat +ellps=WGS84 +datum=WGS84"))
wmap.df <- fortify(wmap)
ggplot(wmap.df, aes(long, lat, group = group)) +
geom_polygon(color = "blue", size = .3) +
coord_map(projection = "albers",  lat0 = 49, lat1 = 75) +
theme_map()
ggplot(wmap.df, aes(long, lat, group = group)) +
geom_polygon(color = "blue", fill = "white", size = .3) +
theme_map()
wmap <- readOGR("canvec_1M_CA_Hydro_shp/canvec_1M_CA_Hydro/watercourse_1.shp")
wmap <- spTransform(wmap, CRS("+proj=longlat +ellps=WGS84 +datum=WGS84"))
